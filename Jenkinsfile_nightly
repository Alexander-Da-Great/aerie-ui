pipeline {
  options {
    disableConcurrentBuilds()
  }
  agent {
    label 'coronado || Pismo || San-clemente || Sugarloaf'
  }
  environment {
        TESTRAIL_API_KEY = credentials('testrail-api-key')
        TESTRAIL_SUITE_ID = 4213
        TESTRAIL_USERNAME = credentials('testrail-username')
  }
  stages {
    stage ('test') {
      steps {
          script {
            def statusCode = sh returnStatus: true, script:
            """
            # Don't echo commands by default
            set +x

            # Setup ENV
            export PATH=/usr/local/bin:/usr/bin
            export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib

            # Setup NVM/Node.js
            export NVM_DIR="\$HOME/.nvm"
            if [ ! -d \$NVM_DIR ]; then
              curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
            fi
            [ -s "\$NVM_DIR/nvm.sh" ] && . "\$NVM_DIR/nvm.sh"
            nvm install v12.14.1

            # Install dependencies, test, and build
            npx yarn --silent
            npx yarn test
            """
            if (statusCode > 0) {
              error "setup failed"
            }
        }
      }
    }
    stage('testrail') {
      steps {
        echo "Uploading test results to test rail."
        sh "scripts/testrail.sh ../../unit-test-results.xml $TESTRAIL_SUITE_ID"
      }
    }
  }
}
